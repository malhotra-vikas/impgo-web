{"ast":null,"code":"var _jsxFileName = \"/Users/vikasmalhotra/Builderspace-Web/impgo-web/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query';\nimport axios from 'axios';\nimport AWS from 'aws-sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\nAWS.config.update({\n  region: 'us-east-2',\n  accessKeyId: 'AKIA4KI6HSV4O4EDEZP5',\n  secretAccessKey: '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'\n});\nconst dynamoDB = new AWS.DynamoDB.DocumentClient();\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n}\n_c = App;\nfunction ReadDynamoDB() {\n  _s();\n  const [fetchPosts, setFetchPosts] = useState(false);\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const params = {\n          TableName: 'TextWeb'\n        };\n        const response = await dynamoDB.scan(params).promise();\n        setTableData(response.Items);\n        console.error('REad  DynamoDB table:', response.Items);\n      } catch (error) {\n        console.error('Error reading DynamoDB table:', error);\n      }\n    };\n  });\n}\n_s(ReadDynamoDB, \"/r9lzlUqCTKKjbpXIUa6EibTXPA=\");\n_c2 = ReadDynamoDB;\nfunction Example() {\n  _s2();\n  const [fetchPosts, setFetchPosts] = useState(false);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"posts\"], () => axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.data), {\n    enabled: fetchPosts\n  });\n  if (isLoading && fetchPosts) return \"Loading...\";\n  if (error) return \"An error has occurred: \" + error.message;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFetchPosts(true),\n      children: [\"Fetch posts using useQuery\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), data === null || data === void 0 ? void 0 : data.map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [post.id, \"-\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n}\n_s2(Example, \"4AodARqJ/vpOjP63myRCnkM+Sxc=\", false, function () {\n  return [useQuery];\n});\n_c3 = Example;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ReadDynamoDB\");\n$RefreshReg$(_c3, \"Example\");","map":{"version":3,"names":["React","useEffect","useState","QueryClient","QueryClientProvider","useQuery","axios","AWS","jsxDEV","_jsxDEV","queryClient","config","update","region","accessKeyId","secretAccessKey","dynamoDB","DynamoDB","DocumentClient","App","client","children","Example","fileName","_jsxFileName","lineNumber","columnNumber","_c","ReadDynamoDB","_s","fetchPosts","setFetchPosts","tableData","setTableData","fetchData","params","TableName","response","scan","promise","Items","console","error","_c2","_s2","isLoading","data","get","then","res","enabled","message","onClick","map","post","style","display","id","title","_c3","$RefreshReg$"],"sources":["/Users/vikasmalhotra/Builderspace-Web/impgo-web/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query'\nimport axios from 'axios';\nimport AWS from 'aws-sdk';\n\nconst queryClient = new QueryClient()\n\nAWS.config.update({\n\tregion: 'us-east-2',\n\taccessKeyId: 'AKIA4KI6HSV4O4EDEZP5',\n\tsecretAccessKey: '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'\n});\nconst dynamoDB = new AWS.DynamoDB.DocumentClient();\n\nexport default function App() {\n\treturn (\n\t\t<QueryClientProvider client={queryClient}>\n\t\t\t<Example />\n\t\t</QueryClientProvider>\n\t)\n}\n\nfunction ReadDynamoDB() {\n\t\tconst [fetchPosts, setFetchPosts] = useState(false);\n\n\t\tconst [tableData, setTableData] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst params = {\n\t\t\t\t\tTableName: 'TextWeb'\n\t\t\t\t};\n\t\t\t\tconst response = await dynamoDB.scan(params).promise();\n\t\t\t\tsetTableData(response.Items);\n\t\t\t\tconsole.error('REad  DynamoDB table:', response.Items);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Error reading DynamoDB table:', error);\n\t\t\t}\n\t\t}\n\t});\n}\n\n\nfunction Example() {\n\tconst [fetchPosts, setFetchPosts] = useState(false);\n\tconst { isLoading, error, data } = useQuery(\n\t\t[\"posts\"],\n\t\t() =>\n\t\t\taxios\n\t\t\t\t.get(\"https://jsonplaceholder.typicode.com/posts\")\n\t\t\t\t.then((res) => res.data),\n\t\t{\n\t\t\tenabled: fetchPosts\n\t\t}\n\t);\n\n\tif (isLoading && fetchPosts) return \"Loading...\";\n\n\tif (error) return \"An error has occurred: \" + error.message;\n\n\treturn (\n\t\t<div>\n\t\t\t<button onClick={() => setFetchPosts(true)}>\n\t\t\t\tFetch posts using useQuery{\" \"}\n\t\t\t</button>\n\t\t\t<h1>Posts</h1>\n\t\t\t{data?.map((post) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\n\t\t\t\t\t\t<span>{post.id}-&nbsp;</span>\n\t\t\t\t\t\t<div>{post.title}</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}