{"ast":null,"code":"var _jsxFileName = \"/Users/vikasmalhotra/Builderspace-Web/impgo-web/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query';\nimport axios from 'axios';\nimport AWS from 'aws-sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\nAWS.config.update({\n  region: 'us-east-2',\n  accessKeyId: 'AKIA4KI6HSV4O4EDEZP5',\n  secretAccessKey: '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'\n});\nconst dynamoDB = new AWS.DynamoDB.DocumentClient();\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(ReadDynamoDB, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n}\n_c = App;\nfunction ReadDynamoDB() {\n  _s();\n  const [fetchPosts, setFetchDDBPosts] = useState(false);\n  const [isLoading, error, tableData, setTableData] = useState([]);\n  console.log(\"Hi\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const params = {\n          TableName: 'TextWeb'\n        };\n        const response = await dynamoDB.scan(params).promise();\n        console.log(\"Hi 2\");\n        console.log(response.Items);\n        setTableData(response.Items);\n        console.log('REad  DynamoDB table:', response.Items);\n      } catch (error) {\n        console.log('Error reading DynamoDB table:', error);\n      }\n    };\n  });\n  if (isLoading && fetchPosts) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFetchDDBPosts(true),\n      children: [\"Fetch posts using useQuery\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n}\n_s(ReadDynamoDB, \"NKuAy0QaDANXS9dKSgGBaKiIKZU=\");\n_c2 = ReadDynamoDB;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ReadDynamoDB\");","map":{"version":3,"names":["React","useEffect","useState","QueryClient","QueryClientProvider","useQuery","axios","AWS","jsxDEV","_jsxDEV","queryClient","config","update","region","accessKeyId","secretAccessKey","dynamoDB","DynamoDB","DocumentClient","App","client","children","ReadDynamoDB","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","fetchPosts","setFetchDDBPosts","isLoading","error","tableData","setTableData","console","log","fetchData","params","TableName","response","scan","promise","Items","onClick","_c2","$RefreshReg$"],"sources":["/Users/vikasmalhotra/Builderspace-Web/impgo-web/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query'\nimport axios from 'axios';\nimport AWS from 'aws-sdk';\n\nconst queryClient = new QueryClient()\n\nAWS.config.update({\n\tregion: 'us-east-2',\n\taccessKeyId: 'AKIA4KI6HSV4O4EDEZP5',\n\tsecretAccessKey: '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'\n});\nconst dynamoDB = new AWS.DynamoDB.DocumentClient();\n\nexport default function App() {\n\treturn (\n\t\t<QueryClientProvider client={queryClient}>\n\t\t\t<ReadDynamoDB />\n\t\t</QueryClientProvider>\n\t)\n}\n\nfunction ReadDynamoDB() {\n\tconst [fetchPosts, setFetchDDBPosts] = useState(false);\n\n\tconst [isLoading, error, tableData, setTableData] = useState([]);\n\tconsole.log(\"Hi\")\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst params = {\n\t\t\t\t\tTableName: 'TextWeb'\n\t\t\t\t};\n\t\t\t\tconst response = await dynamoDB.scan(params).promise();\n\t\t\t\tconsole.log(\"Hi 2\")\n\t\t\t\tconsole.log(response.Items)\n\n\t\t\t\tsetTableData(response.Items);\n\t\t\t\tconsole.log('REad  DynamoDB table:', response.Items);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('Error reading DynamoDB table:', error);\n\t\t\t}\n\t\t}\n\t});\n\n\n\tif (isLoading && fetchPosts) return \"Loading...\";\n\n\n\treturn (\n\t\t<div>\n\t\t\t<button onClick={() => setFetchDDBPosts(true)}>\n\t\t\t\tFetch posts using useQuery{\" \"}\n\t\t\t</button>\n\t\t\t<h1>Posts</h1>\n\n\t\t</div>\n\t);\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,mBAAmB,EAAEC,QAAQ,QAAQ,aAAa;AACxE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAG,IAAIP,WAAW,CAAC,CAAC;AAErCI,GAAG,CAACI,MAAM,CAACC,MAAM,CAAC;EACjBC,MAAM,EAAE,WAAW;EACnBC,WAAW,EAAE,sBAAsB;EACnCC,eAAe,EAAE;AAClB,CAAC,CAAC;AACF,MAAMC,QAAQ,GAAG,IAAIT,GAAG,CAACU,QAAQ,CAACC,cAAc,CAAC,CAAC;AAElD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC7B,oBACCV,OAAA,CAACL,mBAAmB;IAACgB,MAAM,EAAEV,WAAY;IAAAW,QAAA,eACxCZ,OAAA,CAACa,YAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAExB;AAACC,EAAA,GANuBR,GAAG;AAQ3B,SAASG,YAAYA,CAAA,EAAG;EAAAM,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAEtD,MAAM,CAAC6B,SAAS,EAAEC,KAAK,EAAEC,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAChEiC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EAEjBnC,SAAS,CAAC,MAAM;IACf,MAAMoC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACH,MAAMC,MAAM,GAAG;UACdC,SAAS,EAAE;QACZ,CAAC;QACD,MAAMC,QAAQ,GAAG,MAAMxB,QAAQ,CAACyB,IAAI,CAACH,MAAM,CAAC,CAACI,OAAO,CAAC,CAAC;QACtDP,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACnBD,OAAO,CAACC,GAAG,CAACI,QAAQ,CAACG,KAAK,CAAC;QAE3BT,YAAY,CAACM,QAAQ,CAACG,KAAK,CAAC;QAC5BR,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEI,QAAQ,CAACG,KAAK,CAAC;MACrD,CAAC,CAAC,OAAOX,KAAK,EAAE;QACfG,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEJ,KAAK,CAAC;MACpD;IACD,CAAC;EACF,CAAC,CAAC;EAGF,IAAID,SAAS,IAAIF,UAAU,EAAE,OAAO,YAAY;EAGhD,oBACCpB,OAAA;IAAAY,QAAA,gBACCZ,OAAA;MAAQmC,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAAC,IAAI,CAAE;MAAAT,QAAA,GAAC,4BACpB,EAAC,GAAG;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACTjB,OAAA;MAAAY,QAAA,EAAI;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEV,CAAC;AAER;AAACE,EAAA,CArCQN,YAAY;AAAAuB,GAAA,GAAZvB,YAAY;AAAA,IAAAK,EAAA,EAAAkB,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}